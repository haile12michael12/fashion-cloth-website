name: Full Stack CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend_react/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend_react
        npm ci
    
    - name: Run linting
      run: |
        cd frontend_react
        npm run lint
    
    - name: Build frontend
      run: |
        cd frontend_react
        npm run build
    
    - name: Archive frontend build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend_react/dist

  backend-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: fashion_cloth_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    strategy:
      matrix:
        php-version: [8.1, 8.2]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, bcmath, soap, zip
        coverage: none
    
    - name: Install backend dependencies
      run: |
        cd backend-laravel
        composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Copy environment file
      run: |
        cd backend-laravel
        cp .env.example .env
    
    - name: Generate application key
      run: |
        cd backend-laravel
        php artisan key:generate
    
    - name: Run PHP linter
      run: |
        cd backend-laravel
        find ./app -name "*.php" -print0 | xargs -0 -n1 -P8 php -l
    
    - name: Run tests
      run: |
        cd backend-laravel
        php artisan test
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: fashion_cloth_test
        DB_USERNAME: root
        DB_PASSWORD: password

  deploy:
    needs: [frontend-build, backend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend_react/dist
    
    - name: Deploy full stack application
      run: |
        echo "Deploying full stack application..."
        # Add your deployment commands here for both frontend and backend
        # For example:
        # 1. Deploy backend to server
        # 2. Deploy frontend to CDN or static hosting